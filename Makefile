# Makefile for cocode development tasks

SHELL := /bin/bash

# Detect uv; fall back to pip
UV := $(shell command -v uv 2>/dev/null)
ifdef UV
  INSTALL_CMD := uv pip install -e
else
  INSTALL_CMD := pip install -e
endif

.PHONY: help install lint format typecheck test test-quick coverage precommit-install precommit-run tui-demo cli-help clean

help:
	@echo "cocode dev tasks:"
	@echo "  make install           Install project with dev deps (uv or pip)"
	@echo "  make lint              Ruff lint"
	@echo "  make format            Black format"
	@echo "  make typecheck         MyPy type checks"
	@echo "  make test              Run pytest with coverage"
	@echo "  make test-quick        Quick pytest run"
	@echo "  make coverage          Open coverage HTML (if available)"
	@echo "  make precommit-install Install pre-commit hooks"
	@echo "  make precommit-run     Run pre-commit on all files"
	@echo "  make tui-demo          Run Textual prototype"
	@echo "  make cli-help          Show CLI help"
	@echo "  make clean             Remove caches and build artifacts"

install:
	$(INSTALL_CMD) ".[dev]"

lint:
	ruff check .

format:
	black .

typecheck:
	mypy .

test:
	pytest

test-quick:
	pytest -q

coverage:
	@echo "Open htmlcov/index.html in your browser (generated by pytest)"

precommit-install:
	pre-commit install

precommit-run:
	pre-commit run --all-files

tui-demo:
	python prototypes/textual_prototype/textual_demo.py

cli-help:
	python -m cocode --help

clean:
	rm -rf .pytest_cache htmlcov .mypy_cache

